// primary keys: anything with @id
// foreign keys: refugeeRegionId, refugeeNodeId, & refugeeCampId

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model AdminUser {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  email    String @unique
}

model CourseSection {
  id                Int    @id @default(autoincrement())
  name              String @unique
  description       String
  // path              String @unique
  deployableRegions DeployableRegion[]
  refugeeGens       RefugeeGen[]
  routes            Route[]
}


// Regions with blue squares
model DeployableRegion {
  id                   Int           @id @default(autoincrement())
  courseSection        CourseSection @relation(fields: [courseSectionId], references: [id])
  courseSectionId      Int           @default(2)
  // id that matches the node in map-nodes.json
  jsonId               Int           @default(0)
  food                 Int           @default(0)
  healthcare           Int           @default(0)
  housing              Int           @default(0)
  admin                Int           @default(0)
  refugeesPresent      Int           @default(0)
}



// RefugeeGen model - red circles
// 
// GenTypes: ORDERLY, DISORDERLY, PANIC
// 
model RefugeeGen { 
  id                   Int           @id @default(autoincrement())
  courseSection        CourseSection @relation(fields: [courseSectionId], references: [id])
  courseSectionId      Int           @default(2)
  // id that matches the node in map-nodes.json
  jsonId               Int           @default(0)
  genType              String        @default("ORDERLY")
  totalRefugees        Int           @default(0)
  newRefugees          Int           @default(0)
  food                 Int           @default(0)
  healthcare           Int           @default(0)
  admin                Int           @default(0)
}



// Route model (Golden Linesâ€“ Refugee/Supply Routes)
model Route { 
  id                   Int           @id @default(autoincrement())
  courseSection        CourseSection @relation(fields: [courseSectionId], references: [id])
  courseSectionId      Int           @default(2)
  // id that matches the node in map-nodes.json
  jsonId               Int           @default(0)
  isOpen               Boolean       @default(true)
  supplyCap            Int           @default(1)
}